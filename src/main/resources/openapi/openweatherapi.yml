openapi: "3.0.3"
servers:
  - url: http://api.openweathermap.org/data/2.5
    description: url of local test environment
info:
  description: Openweatherapi weather specfication
  version: 1.0.0
  title: Openweatherapi
paths:
  /weather:
    get:
      summary: Get weather for location
      operationId: getCurrentWeather
      tags:
        - generatedOpenWeather
      parameters:
        - name: id
          in: query
          description: Location code
          required: true
          schema:
            type: string
            example: "2911298"
        - name: units
          in: query
          description: Request either imperial or metric system
          required: true
          schema:
            type: string
            example: "metric"
        - name: appid
          in: query
          description: private appId
          required: true
          schema:
            type: string
            example: "1234random"
      responses:
        '200':
          description: Request Weather for location code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneratedOpenWeatherApiResponse"

components:
  schemas:
    GeneratedOpenWeatherApiResponse:
      type: object
      description: Weather for location code
      required:
        - main
        - wind
      properties:
        main:
          $ref: "#/components/schemas/main"
        wind:
          $ref: "#/components/schemas/wind"

    coord:
      type: object
      properties:
        lon:
          type: number
          example: 10.6873
        lat:
          type: number
          example: 53.8689
    weather:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 803
          main:
            type: string
            example: Clouds
          description:
            type: string
            example: broken clouds
          icon:
            type: string
            example: 04n
    base:
      type: string
      example: stations
    main:
      type: object
      required:
        - temp
        - humidity
      properties:
        temp:
          type: number
          format: double
          example: 15.30
        feels_like:
          type: number
          format: double
          example: 5.84
        temp_min:
          type: number
          format: double
          example: -16.41
        temp_max:
          type: number
          example: 50.54
        pressure:
          type: integer
          format: int32
          example: 1020
        humidity:
          type: integer
          format: int32
          example: 85
    visibility:
      type: integer
      format: int32
      example: 7000
    wind:
      type: object
      required:
        - speed
      properties:
        speed:
          type: number
          format: double
          example: 2.57
        deg:
          type: integer
          format: int32
          example: 230
    clouds:
      type: object
      properties:
        all:
          type: integer
          format: int32
          example: 75
    dt:
      type: integer
      format: int32
      example: 1639340863
    sys:
      type: object
      properties:
        type:
          type: integer
          format: int32
          example: 1
        id:
          type: integer
          format: int32
          example: 1293
        country:
          type: string
          example: DE
        sunrise:
          type: integer
          format: int32
          example: 1639293994
        sunset:
          type: integer
          format: int32
          example: 1639320939
    timezone:
      type: integer
      format: int32
      example: 3600
    id:
      type: integer
      format: int32
      example: 2911298
    name:
      type: string
      example: Hamburg
    cod:
      type: integer
      format: int32
      example: 200
