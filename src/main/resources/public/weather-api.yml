openapi: "3.0.3"
servers:
  - url: https://api.weather.oskar-westmeijer.com
    description: url of production environment
info:
  description: |
    # Introduction
    Provides weather data for selected locations. The frontend displays the weather in charts. The backend service offers a public
    Api. The weather data is harvested every minute from `openweathermap.org`. The information is stored in a database. Furthermore the Api is
    documented with an OpenApi specification.
    
    - [ https://weather.oskar-westmeijer.com ](https://weather.oskar-westmeijer.com) (Angular frontend)
    - [ https://api.weather.oskar-westmeijer.com ](https://api.weather.oskar-westmeijer.com) (Spring Boot backend)

  version: 1.0.0
  title: Weather-Api
externalDocs:
  description: https://github.com/OskarWestmeijer/weather
  url: 'https://github.com/OskarWestmeijer/weather'
tags:
  - name: locations_resource
    x-displayName: locations
    description: Available locations for weather requests.
  - name: weather_resource
    x-displayName: weather
    description: Weather for a location.
  - name: overview_resource
    x-displayName: overview
    description: Available locations with latest weather.

  - name: location_dto
    x-displayName: LocationElement
    description: |
      Element of the LocationResponse
      <SchemaDefinition schemaRef="#/components/schemas/LocationDto" />
  - name: location_response
    x-displayName: LocationResponse
    description: |
      Container for multiple LocationDto elements
      <SchemaDefinition schemaRef="#/components/schemas/LocationResponse" />

  - name: weather_dto
    x-displayName: WeatherElement
    description: |
      Element of the WeatherResponse
      <SchemaDefinition schemaRef="#/components/schemas/WeatherDto" />
  - name: weather_response
    x-displayName: WeatherResponse
    description: |
      Container for multiple WeatherDto elements
      <SchemaDefinition schemaRef="#/components/schemas/WeatherResponse" />

  - name: overview_dto
    x-displayName: OverviewElement
    description: |
      Element of the OverviewResponse
      <SchemaDefinition schemaRef="#/components/schemas/OverviewDto" />
  - name: overview_response
    x-displayName: OverviewResponse
    description: |
      Container for multiple OverviewDto elements
      <SchemaDefinition schemaRef="#/components/schemas/OverviewResponse" />


x-tagGroups:
  - name: Resources
    tags:
      - locations_resource
      - weather_resource
      - overview_resource
  - name: Response Models
    tags:
      - location_response
      - weather_response
      - overview_response
  - name: Response elements
    tags:
      - location_dto
      - weather_dto
      - overview_dto
paths:
  /locations:
    get:
      summary: Get all locations
      operationId: getLocations
      tags:
        - locations_resource
      responses:
        '200':
          description: Request Weather for these locations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationResponse"

  /locations/{locationId}/weather:
    get:
      summary: Get weather feed for location
      operationId: getWeatherFeedForLocation
      tags:
        - weather_resource
      parameters:
        - name: locationId
          in: path
          required: true
          description: api locationId
          schema:
            type: integer
            example: 1
        - name: from
          in: query
          required: false
          description: Weather data starting from this timestamp. If not provided, it defaults to the timestamp of the oldest available record.
          schema:
            type: string
            format: date-time
            description: UTC
            example: "2022-08-29T21:56:18.602546Z"
        - name: limit
          in: query
          required: false
          description: Limit count of weather elements (default is 100)
          schema:
            type: integer
            example: 100
            default: 100
      responses:
        '200':
          description: Weather results for the location.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeatherResponse"

  /overview:
    get:
      summary: Get all locations enriched with current weather data
      operationId: getOverview
      tags:
        - overview_resource
      responses:
        '200':
          description: Get all locations enriched with current weather data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OverviewResponse"

components:
  schemas:
    LocationDto:
      type: object
      description: Requestable location
      required:
        - locationId
        - uuid
        - localZipCode
        - cityName
        - country
        - countryCode
        - lastImportAt
      properties:
        locationId:
          type: integer
          description: api locationId, request weather with this id
          example: 1
        localZipCode:
          type: string
          description: national postal code, to be considered in combination with 'countryCode'
          example: "20095"
        cityName:
          type: string
          description: city name in countries local spelling
          example: "Hamburg"
        country:
          type: string
          description: deprecated, replaced by countryCode
          example: "Germany"
        countryCode:
          type: string
          description: ISO 3166-1 ALPHA-3 codes
          example: "GER"
        lastImportAt:
          type: string
          format: date-time
          description: UTC
          example: "2022-08-29T21:56:18.602546Z"
    Locations:
      type: array
      items:
        $ref: "#/components/schemas/LocationDto"

    LocationResponse:
      type: object
      description: Container for multiple location elements.
      required:
        - locations
      properties:
        locations:
          type: array
          items:
            $ref: "#/components/schemas/LocationDto"

    WeatherResponse:
      type: object
      description: Weather results for a location.
      required:
        - locationId
        - cityName
        - country
        - weatherData
      properties:
        locationId:
          type: integer
          format: int32
          description: api locationId
          example: 1
        cityName:
          type: string
          example: "Hamburg"
        country:
          type: string
          example: "Germany"
        weatherData:
          type: array
          items:
            $ref: "#/components/schemas/WeatherDto"

    WeatherDto:
      type: object
      description: Weather at recorded time. Wrapped in WeatherResponse, with location information.
      required:
        - id
        - temperature
        - humidity
        - windSpeed
        - recordedAt
      properties:
        id:
          type: string
          format: uuid
          example: "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a15"
          description: "Technical id of the weather element"
        temperature:
          type: number
          format: double
          example: 11.45
        humidity:
          type: integer
          format: int32
          example: 55
        windSpeed:
          type: number
          format: double
          example: 2.57
        recordedAt:
          type: string
          format: date-time
          example: "2022-08-29T21:56:18.602546Z"

    OverviewDto:
      type: object
      description: Overview of location and current weather
      required:
        - locationId
        - cityName
        - countryCode
        - temperature
        - humidity
        - windSpeed
        - recordedAt
      properties:
        locationId:
          type: integer
          format: int32
          description: api locationId, request weather with this id
          example: 1
        cityName:
          type: string
          description: city name in countries local spelling
          example: "Hamburg"
        countryCode:
          type: string
          description: ISO 3166-1 ALPHA-3 codes
          example: "GER"
        temperature:
          type: number
          format: double
          example: 11.45
        humidity:
          type: integer
          format: int32
          example: 55
        windSpeed:
          type: number
          format: double
          example: 2.57
        recordedAt:
          type: string
          format: date-time
          example: "2022-08-29T21:56:18.602546Z"

    OverviewResponse:
      type: object
      description: Overview of all locations and latest weather
      required:
        - chart-locations
      properties:
        overview:
          type: array
          items:
            $ref: "#/components/schemas/OverviewDto"
