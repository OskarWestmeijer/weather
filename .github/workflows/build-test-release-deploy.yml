name: build-test-release-deploy

on: [ push, pull_request ]

permissions:
  pull-requests: write
  contents: write
  repository-projects: write

jobs:
  backend-build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build and test
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - run: |
          chmod +x mvnw 
          ./mvnw clean verify
      - uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/app.jar
          retention-days: 1

  frontend-build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18.13.0'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - run: npm ci
      - run: CI=false npm run build

  codeql-check:
    uses: ./.github/workflows/codeql.yml
    permissions:
      actions: read
      contents: read
      security-events: write

  trivy-image-check-backend:
    runs-on: ubuntu-latest
    needs: [ backend-build-and-test ]
    environment: oskar-westmeijer-environment
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: app-jar
          path: target
      - name: build image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/weather-api:sha-${{ github.sha }} .
      - name: trivy image scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKER_USERNAME }}/weather-api:sha-${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-image-results.sarif'
          ignore-unfixed: true
      - name: upload trivy image scan results to GitHub security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-image-results.sarif'
          category: 'image'

  dependabot-automerge:
    needs: [ backend-build-and-test, frontend-build-and-test, codeql-check ]
    runs-on: ubuntu-latest
    environment: oskar-westmeijer-environment
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - uses: actions/checkout@v3
      - run: echo "event name is:" ${{ github.event_name }}
      - run: echo "event type is:" ${{ github.event.action }}
      - name: Dependabot metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: '${{ secrets.MASTER_TOKEN }}'
      - name: approve PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.MASTER_TOKEN }}
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.MASTER_TOKEN}}

  release-backend-docker-image:
    needs: [ backend-build-and-test, frontend-build-and-test, codeql-check ]
    runs-on: ubuntu-latest
    environment: oskar-westmeijer-environment
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: actions/download-artifact@v3
        with:
          name: app-jar
          path: target
      - name: image tagging
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/weather-api
          tags: |
            # set latest tag for master branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha,format=long
      - name: build image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  release-frontend-docker-image:
    needs: [ backend-build-and-test, frontend-build-and-test, codeql-check ]
    runs-on: ubuntu-latest
    environment: oskar-westmeijer-environment
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: image tagging
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/weather-ui
          tags: |
            # set latest tag for master branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha,format=long
      - name: build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          file: frontend/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
